-- SQL Exercises 5 - Formatting Query Output
-- Medium post: https://medium.com/@aadata/sql-exercises-5-formatting-query-output-e192f30553bc

-- Salesman Table
-- salesman_id |    name    |   city   | commission 
---------------+------------+----------+------------
--        5001 | James Hoog | New York |       0.15
--        5002 | Nail Knite | Paris    |       0.13
--        5005 | Pit Alex   | London   |       0.11
--        5006 | Mc Lyon    | Paris    |       0.14
--        5007 | Paul Adam  | Rome     |       0.13
--        5003 | Lauson Hen | San Jose |       0.12

-- 1. Select all the salespeople. Return salesman_id, name, city, commission with the percent sign (%).
SELECT salesman_id, name, city, CONCAT(ROUND(commission*100), '%')
FROM salesman

-- Orders Table
-- ord_no      purch_amt   ord_date    customer_id  salesman_id
-------------  ----------  ----------  -----------  -----------
-- 70001       150.5       2012-10-05  3005         5002
-- 70009       270.65      2012-09-10  3001         5005
-- 70002       65.26       2012-10-05  3002         5001
-- 70004       110.5       2012-08-17  3009         5003
-- 70007       948.5       2012-09-10  3005         5002
-- 70005       2400.6      2012-07-27  3007         5001
-- 70008       5760        2012-09-10  3002         5001
-- 70010       1983.43     2012-10-10  3004         5006
-- 70003       2480.4      2012-10-10  3009         5003
-- 70012       250.45      2012-06-27  3008         5002
-- 70011       75.29       2012-08-17  3003         5007
-- 70013       3045.6      2012-04-25  3002         5001

-- 1. Find the number of orders booked for each day. Return the result in a format like “For 2001–10–10 there are 15 orders”.”
SELECT CONCAT(‘For ‘, ord_date, ‘ there are ‘, COUNT(*), ‘ orders’)
FROM orders
GROUP BY ord_date
ORDER BY ord_date

-- 2. Find all the orders. Sort the result-set in ascending order by ord_no. Return all fields.
SELECT *
FROM orders
ORDER BY ord_no ASC

-- 3. Find all the orders. Sort the result-set in descending order by ord_date. Return all fields.
SELECT *
FROM orders
ORDER BY ord_date DESC

-- 4. Find all the orders. Sort the result-set in descending order by ord_date and purch_amt. Return all fields.
SELECT *
FROM orders
ORDER BY ord_date DESC, purch_amt DESC

-- 5. Calculate the maximum purchase amount generated by each sales person for every order date. Sort the result-set by sales person id and order date in ascending order. Return sales person id, order date and maximum purchase amount.
SELECT salesman_id, ord_date, MAX(purch_amt)
FROM orders
GROUP BY salesman_id, ord_date
ORDER BY salesman_id ASC, ord_date ASC

-- 6. Count the unique orders, highest purchase amount for each customer. Sort the result-set in descending order on 2nd field. Return customer ID, number of distinct orders and highest purchase amount by each customer.
SELECT customer_id, COUNT(DISTINCT(ord_no)), MAX(purch_amt)
FROM orders
GROUP BY customer_id
ORDER BY 2 DESC

-- 7. Calculate summation of purchase amount, total commission (15% for all salesmen) by each order date. Sort the result-set on order date. Return order date, summation of purchase amount and commission.
SELECT ord_date, SUM(purch_amt), SUM(purch_amt)*0.15 AS total_commision
FROM orders
GROUP BY ord_date
ORDER BY ord_date

-- Customer Table
-- customer_id |   cust_name    |    city    | grade | salesman_id 
---------------+----------------+------------+-------+-------------
--        3002 | Nick Rimando   | New York   |   100 |        5001
--        3007 | Brad Davis     | New York   |   200 |        5001
--        3005 | Graham Zusi    | California |   200 |        5002
--        3008 | Julian Green   | London     |   300 |        5002
--        3004 | Fabian Johnson | Paris      |   300 |        5006
--        3009 | Geoff Cameron  | Berlin     |   100 |        5003
--        3003 | Jozy Altidor   | Moscow     |   200 |        5007
--        3001 | Brad Guzan     | London     |       |        5005

-- 1. Find all the customers. Sort the result-set by customer_id. Return cust_name, city, grade.
SELECT cust_name, city, grade
FROM customer
ORDER BY customer_id

-- 2. Find all the customers. Sort the result-set in descending order on 3rd field. Return customer name, city and grade.
SELECT cust_name, city, grade
FROM customer
ORDER BY 3 DESC